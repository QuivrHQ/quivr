drop index if exists "public"."vectors_file_sha1_idx";

alter table "public"."vectors" drop column "file_sha1";

alter table "public"."vectors" add column "knowledge_id" uuid;

alter table "public"."vectors" alter column "id" set default gen_random_uuid();

UPDATE "public"."vectors"
SET knowledge_id = knowledge.id
FROM knowledge,
    brains_vectors
WHERE vectors.metadata->>'file_name' = knowledge.file_name
AND brains_vectors.vector_id = vectors.id
AND knowledge.brain_id = brains_vectors.brain_id;


alter table "public"."vectors" add constraint "public_vectors_knowledge_id_fkey" FOREIGN KEY (knowledge_id) REFERENCES knowledge(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."vectors" validate constraint "public_vectors_knowledge_id_fkey";


-- Creating BrainKnowledge

CREATE INDEX vectors_knowledge_id_idx ON public.vectors USING btree (knowledge_id);

create table "public"."knowledge_brain" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "knowledge_id" uuid,
    "brain_id" uuid
);

-- Backfill from existing knowledge
INSERT INTO "public"."knowledge_brain" (knowledge_id, brain_id)
SELECT k.id, k.brain_id
FROM knowledge k;


CREATE INDEX knowledge_brain_brain_id_idx ON public.knowledge_brain USING btree (brain_id);

CREATE INDEX knowledge_brain_knowledge_id_idx ON public.knowledge_brain USING btree (knowledge_id);

CREATE UNIQUE INDEX knowledge_brain_pkey ON public.knowledge_brain USING btree (id);

alter table "public"."knowledge" drop column "brain_id";

alter table "public"."knowledge_brain" enable row level security;

alter table "public"."knowledge_brain" add constraint "knowledge_brain_pkey" PRIMARY KEY using index "knowledge_brain_pkey";

alter table "public"."knowledge_brain" add constraint "public_knowledge_brain_brain_id_fkey" FOREIGN KEY (brain_id) REFERENCES brains(brain_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."knowledge_brain" validate constraint "public_knowledge_brain_brain_id_fkey";

alter table "public"."knowledge_brain" add constraint "public_knowledge_brain_knowledge_id_fkey" FOREIGN KEY (knowledge_id) REFERENCES knowledge(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."knowledge_brain" validate constraint "public_knowledge_brain_knowledge_id_fkey";


grant delete on table "public"."knowledge_brain" to "anon";

grant insert on table "public"."knowledge_brain" to "anon";

grant references on table "public"."knowledge_brain" to "anon";

grant select on table "public"."knowledge_brain" to "anon";

grant trigger on table "public"."knowledge_brain" to "anon";

grant truncate on table "public"."knowledge_brain" to "anon";

grant update on table "public"."knowledge_brain" to "anon";

grant delete on table "public"."knowledge_brain" to "authenticated";

grant insert on table "public"."knowledge_brain" to "authenticated";

grant references on table "public"."knowledge_brain" to "authenticated";

grant select on table "public"."knowledge_brain" to "authenticated";

grant trigger on table "public"."knowledge_brain" to "authenticated";

grant truncate on table "public"."knowledge_brain" to "authenticated";

grant update on table "public"."knowledge_brain" to "authenticated";

grant delete on table "public"."knowledge_brain" to "service_role";

grant insert on table "public"."knowledge_brain" to "service_role";

grant references on table "public"."knowledge_brain" to "service_role";

grant select on table "public"."knowledge_brain" to "service_role";

grant trigger on table "public"."knowledge_brain" to "service_role";

grant truncate on table "public"."knowledge_brain" to "service_role";

grant update on table "public"."knowledge_brain" to "service_role";
