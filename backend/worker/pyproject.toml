[tool.poetry]
name = "quivr-worker"
version = "0.0.1"
description = ""
authors = ["QuivrHQ", "aminediro <aminedirhoussi1@gmail.com>"]
readme = "README.md"
repository = "https://github.com/QuivrHQ/quivr"

[tool.poetry.dependencies]
python = "^3.11,<3.13"
# API Services
quivr-api = { path = "../api", develop = true }
quivr-core = { path = "../core", extras = ["all"], develop = true }
celery = { extras = ["redis"], version = "*" }

# Heavy deps
torch = [
    { version = "2.3.1", source = "pypi", platform = "darwin" },
    { version = "2.3.1", source = "pypi", platform = "linux", markers = "platform_machine != 'x86_64'" },
    { version = "2.3.1+cpu", source = "pytorch-cpu-src", platform = "linux", markers = "platform_machine == 'x86_64'" },
    { version = "2.3.1+cpu", source = "pytorch-cpu-src", platform = "win32" },
]
torchvision = [
    { version = "0.18.1", source = "pypi", platform = "darwin" },
    { version = "0.18.1", source = "pypi", platform = "linux", markers = "platform_machine != 'x86_64'" },
    { version = "0.18.1+cpu", source = "pytorch-cpu-src", platform = "linux", markers = "platform_machine == 'x86_64'" },
    { version = "0.18.1+cpu", source = "pytorch-cpu-src", platform = "win32" },
]
python-dotenv = "^1.0.1"
playwright = "^1.45.1"
openai = "^1.38.0"
flower = "^2.0.1"
nltk = "3.9.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
mypy = "^1.10.0"
pre-commit = "^3.7.1"
ipykernel = "*"
ruff = "^0.4.8"
flake8 = "*"
flake8-black = "*"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest-asyncio = "^0.23.7"
pytest = "^8.2.2"
pytest-xdist = "^3.6.1"
pytest-cov = "^5.0.0"
tox = "^4.16.0"


[tool.mypy]
disallow_untyped_defs = true
# Remove venv skip when integrated with pre-commit
exclude = ["_static", "build", "examples", "notebooks", "venv", ".venv"]
ignore_missing_imports = true
python_version = "3.11"

[tool.ruff]
line-length = 88
exclude = [".git", "__pycache__", ".mypy_cache", ".pytest_cache"]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = [
    "B904",
    "B006",
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]


[tool.ruff.lint.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
known-first-party = []

[tool.pytest.ini_options]
addopts = "--tb=short -ra -v"
filterwarnings = ["ignore::DeprecationWarning"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "base: these tests require quivr-core with extra `base` to be installed",
    "tika: these tests require a tika server to be running",
    "unstructured: these tests require `unstructured` dependency",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "pytorch-cpu-src"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"
